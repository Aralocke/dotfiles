" ================ Formatting ================
set nocompatible                " explicitly leave vi compatibility mode
                                " (This must be first because it breaks other settings)
" ================ Pathogen load ================
call pathogen#infect()
call pathogen#helptags()

" ================ General settings ================

set encoding=utf-8              " set UTF8 as the standard language
set number                      " line numbering
set showcmd                     " incomplete cmds displayed at bottom
set showmode                    " active mode displayed at bottom
set history=300                 " num lines of :cmdline history to retain
set scrolloff=8                 " keep 8 lines of context when side scrolling
set gcr=a:blinkon0              " no cursor blink
" check file change every 4 seconds ('CursorHold') and reload the buffer upon
" detecting change
set autoread                                                                                                                                                                                    
au CursorHold * checktime
set backspace=indent,eol,start  " backspace on in insert mode
syntax on                       " colorized syntax highlighting
set title                       " show title in terminal
set wildmode=list:longest,full  " tab completion list of available commands
set wildmenu
set hidden                      " enable support for multiple buffers in vim
                                " Explanation: http://items.sjbach.com/319/configuring-vim-right
set laststatus=2
set splitbelow
set splitright

nnoremap <C-O> <C-w>v<C-w>l     " Split pane VERTICAL
nnoremap <C-E> <C-w>s<C-w>l     " Split pane HORIZONTAL
" nnoremap <C-E> <C-w>c<C-w>l     " Close current pane 
nnoremap <C-J> <C-W><C-K>       " Toggle pane UP
nnoremap <C-K> <C-W><C-J>       " Toggle pane DOWN
nnoremap <C-L> <C-W><C-L>       " Toggle pane RIGHT
nnoremap <C-H> <C-W><C-H>       " Toggle pane LEFT
nnoremap <C-N> <C-W><C-N>       " Toggle new empty pane

" ================ CtrlP =================
" Setup some default ignores
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.(git|hg|svn)|\_site)$',
  \ 'file': '\v\.(exe|so|dll|class|png|jpg|jpeg)$',
  \ }

" Use the nearest .git directory as the cwd
" This makes a lot of sense if you are working on a project that is in
" version control. It also supports works with .svn, .hg, .bzr.
let g:ctrlp_working_path_mode = 'r'

" ================ Buffer Management =============
" Move to the next buffer
nmap <C-A> :bnext<CR>

" Move to the previous buffer
" This is for moving to the last buffer.
nmap <C-D> :bprevious<CR>

" Close the current buffer and move to the next one.
" This replicates the feeling of closing a tab, but it really
" only works on the buffers.
nmap <C-S> :bp <BAR> bd #<CR>

" ================ Searching ================
set ignorecase                  " enable case sensitive smart scrolling
set smartcase
set hlsearch                    " hilight search terms as you go
set incsearch                   " dynamically as they are typed
set noerrorbells
set visualbell                  " no beep

" ================ Solarized Support ================
set background=dark

let g:solarized_visibility="low"
syntax enable                 " syntax highlighting on
colorscheme solarized         " detects background value (light/dark)

" ================ GUI Specific Settings ============
if has('gui_running')
  set guioptions-=m  " Remove the menu bar
  set guioptions-=T  " Remove the toolbar
  set guioptions-=r  " Remove the right hand scroll bar
  set guioptions-=L  " Remove the left hand scroll bar
endif
" ================ Backups ================
set noswapfile
set nobackup
set nowb

" Keep undo history across sessions, by storing in file.
if has('persistent_undo')
  silent !mkdir ~/.dotfiles/vim/backups > /dev/null 2>&1
  set undodir=~/.dotfiles/vim/backups
  set undofile
endif

" ================ Indentation ================
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

filetype on
filetype plugin on
filetype indent on

" Make tabs, trailing whitespace, and non-breaking spaces visible
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list

set nowrap                   " Don't wrap lines
set linebreak                " Wrap lines at convenient points

" ================ Load local settings ================
if filereadable($HOME . "/.vimrc-local")
	source ~/.vimrc-local
endif

augroup myvimrc
   au!
   au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | so $MYGVIMRC | endif
augroup END
